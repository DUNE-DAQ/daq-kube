---
tplVersion: 2

image:
  pullPolicy: Always # they overwrite tags for bugfixes

config:
  agent:
    flush_interval: "2s"
    flush_jitter: "1s"
    metric_batch_size: 1000
    omit_hostname: true

  inputs:
  - kafka_consumer:
      brokers: {{ dunedaq.kafka.bootstrap_brokers | tojson }}
      topics: {{ OPMON_telegraf.kafka_topics | tojson }}
      version: "{{ dunedaq.kafka.version }}"
      client_id: 'opmon-telegraf'
      consumer_group: 'opmon-telegraf'
      data_format: 'xpath_json'
      xpath_native_types: true
      xpath:
        - metric_name: '/measurement'
          timestamp: '/time'
          timestamp_format: 'rfc3339'
          tag_selection: '/tags/*'
          field_selection: '/fields/*'
  - internal:
      collect_memstats: false
      tags: 
        metrics: "telegraf"

  outputs:
  - prometheus_client: # for prometheus
      listen: ":{{ OPMON_telegraf.prometheus_port }}"
      tagpass: 
        metrics: 
          - "telegraf"
  - influxdb: # influxdb_v1, need to switch to v2 or v3
      urls: 
        - http://opmon-influxdb.{{ DUNE_opmon.namespace }}.svc:8086
      database: {{ OPMON_telegraf.influxdb_database }}
      username: {{ OPMON_telegraf.influxdb_username }}
      password: "{{ OPMON_telegraf.influxdb_password }}"
      tagdrop: 
        metrics: 
          - "telegraf"

affinity:
  podAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions: # try to schedule near Kafka
          - key: "strimzi.io/cluster"
            operator: In
            values:
            - "{{ dunedaq.kafka.name }}"
        namespaceSelector:
          matchLabels:
            name: {{ dunedaq.kafka.namespace }}
        topologyKey: kubernetes.io/hostname
    - weight: 90
      podAffinityTerm:
        labelSelector:
          matchExpressions: # try to schedule near Influxdb
          - key: "app.kubernetes.io/instance"
            operator: In
            values:
            - "opmon-influxdb"
        namespaceSelector:
          matchLabels:
            name: {{ DUNE_opmon.namespace }}
        topologyKey: kubernetes.io/hostname

resources:
  requests:
    cpu: 10m
    memory: 16Mi

nodeSelector:
  kubernetes.io/os: linux

metrics: # do this by hand so we can filter
  health:
    enabled: false
  internal:
    enabled: false
