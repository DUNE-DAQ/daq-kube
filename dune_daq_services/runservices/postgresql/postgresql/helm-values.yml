---
auth:
  username: {{ DUNE_runservices.postgresql_database_username }}
  password: {{ DUNE_runservices.postgresql_database_password }}
  database: {{ DUNE_runservices.postgresql_database_name }}
  postgresPassword: {{ DUNE_runservices.postgresql_database_password }}

architecture: standalone

serviceBindings:
  enabled: true

primary:
  initdb:
    args: '--data-checksums --locale=en_US.UTF-8 --set huge_pages=off'
    scriptsConfigMap: runnum-table-sql

  extendedConfiguration: |-
    log_destination = stderr
    log_timezone = UTC
    timezone = UTC
    huge_pages = off

  persistence:
    enabled: true
    size: 4Gi # this is guesswork
    storageClass: {{ local_path_provisioner.storage_class_name }}

  affinity:
   nodeAffinity:
     requiredDuringSchedulingIgnoredDuringExecution:
       nodeSelectorTerms:
       - matchExpressions:
         - key: {{ kubernetes_label.worker }}
           operator: Exists


shmVolume:
  enabled: true

resources: # this is guesswork
  requests:
    cpu: 10m
    memory: 64Mi

affinity:
 nodeAffinity:
   requiredDuringSchedulingIgnoredDuringExecution:
     nodeSelectorTerms:
     - matchExpressions:
       - key: {{ kubernetes_label.worker }}
         operator: Exists

{% if with_backups %}
backup:
  enabled: true
  successfulJobsHistoryLimit: 1
{% endif %}

metrics:
  enabled: true
  resources: # this is guesswork
    requests:
      cpu: 10m
      memory: 16Mi
    limits:
      cpu: 300m
      memory: 512Mi
  serviceMonitor:
    enabled: true
    labels:
      jobLabel: postgresql-runservices
      "{{ prometheus_servicemonitor_label_name }}": "{{ prometheus_servicemonitor_labels.postgresql }}"
    jobLabel: jobLabel
  prometheusRule: # setup alerting rules here and then enable it
    enabled: false
    rules: []
    labels:
      "{{ prometheus_rule_label_name }}": "{{ prometheus_rule_labels.postgresql }}"
