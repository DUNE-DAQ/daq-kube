---
# You must still deploy your database with its manifests from upstream
# and create a secret called runservices-postgresql-svcbind-custom-user
#   containing keys: host, port, dbname,  username, password
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/app: runregistry-rest
    app.kubernetes.io/component: runregistry-rest
  name: runregistry-rest
  namespace: {{ DUNE_runservices.namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/app: runregistry-rest
      app.kubernetes.io/component: runregistry-rest
  template:
    metadata:
      labels:
        app.kubernetes.io/app: runregistry-rest
        app.kubernetes.io/component: runregistry-rest
    spec:
      affinity:
       nodeAffinity:
         requiredDuringSchedulingIgnoredDuringExecution:
           nodeSelectorTerms:
           - matchExpressions:
             - key: {{ kubernetes_label.worker }}
               operator: Exists
      containers:
      - env:
        - name: MICROSERVICE
          value: runregistry-rest
        - name: DATABASE_URI
          valueFrom:
            secretKeyRef:
              key: uri
              name: runservices-postgresql-svcbind-custom-user
        name: runregistry-rest
        ports:
        - containerPort: 5005
          name: http
          protocol: TCP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        resources:
          limits:
            memory: 1Gi
          requests:
            memory: 8Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsGroup: 11000
          runAsNonRoot: true
          runAsUser: 11000
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /uploads
          name: uploads-volume
      volumes: # persistance is not required at this time
      - name: uploads-volume
        emptyDir:
          sizeLimit: 20Gi
      securityContext:
        fsGroup: 11000
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/app: runregistry-rest
    app.kubernetes.io/component: runregistry-rest
  name: runregistry-rest
  namespace: runservices
spec:
  ports:
  - name: http
    port: 5005
    protocol: TCP
    targetPort: 5005
  selector:
    app.kubernetes.io/app: runregistry-rest
    app.kubernetes.io/component: runregistry-rest
  type: ClusterIP
