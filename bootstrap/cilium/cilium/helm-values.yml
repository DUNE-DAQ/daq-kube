---
# What about:
#  kube-proxy replacement
#  bpf: flags in helm chart
#  ingress
#  gateway-api
#  socketLB
#  traffic encryption
#  service-mesh
#  multi-cluster mesh
#  bigTCP
#  localRedirectPolicy
#  cilium-NodePort
#  cilium-wellKnownIdentities
#  cilium-etcd
#  cilium-preflight

resources: # this is guess work
  limits:
    cpu: 4000m
    memory: 8Gi
  requests:
    cpu: 100m
    memory: 512Mi

ipam:
  mode: cluster-pool
  operator:
    clusterPoolIPv4PodCIDRList: {{ clusterPoolIPv4PodCIDRList | tojson }}

resourceQuotas:
  enabled: true

annotateK8sNode: true
logSystemLoad: true

cluster:
  name: "{{ target.name }}"
  id: {{ kubernetesClusterID }}

# ipv4NativeRoutingCIDR is required for cluster mesh
# but I don't know what to set it to...

monitor:
  enabled: true

pprof:
  enabled: true

bandwidthManager:
  enabled: true

pmtuDiscovery:
  enabled: true

bpf:
  hostLegacyRouting: true
  masquerade: true
  preallocateMaps: true
  tproxy: true
bpfClockProbe: true

nodePort:
  enabled: true

envoy:
  resources: # this is guess work
    limits:
      cpu: 4000m
      memory: 4Gi
    requests:
      cpu: 100m
      memory: 512Mi
  prometheus:
    serviceMonitor:
      enabled: true
      interval: "30s"
      labels:
        "{{ prometheus_servicemonitor_label_name }}": "{{ prometheus_servicemonitor_labels.system }}"

prometheus:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: "30s"
    trustCRDsExist: true
    labels:
      "{{ prometheus_servicemonitor_label_name }}": "{{ prometheus_servicemonitor_labels.system }}"

dashboards:
  enabled: true
  label: "{{ grafana_dashboard_label_name }}"
  labelValue: "{{ grafana_dashboard_label_value }}"
  annotations:
    "{{ grafana_dashboard_folder_annotation }}": Cilium

hubble:
  enabled: true
  metrics:
    enableOpenMetrics: true
    enabled:
      - dns:query
      - drop
      - tcp
      - flow
      - icmp
      - flows-to-world
#      - httpV2:exemplars=true
#      - labelsContext=source_ip,source_namespace,source_workload,destination_ip,destination_namespace,destination_workload,traffic_direction
#      - kafka_requests_total
#      - kafka_request_duration_seconds
    serviceMonitor:
      enabled: true
      interval: "30s"
      labels:
        "{{ prometheus_servicemonitor_label_name }}": "{{ prometheus_servicemonitor_labels.system }}"
  dashboards:
    enabled: true
    label: "{{ grafana_dashboard_label_name }}"
    labelValue: "{{ grafana_dashboard_label_value }}"
    annotations:
      "{{ grafana_dashboard_folder_annotation }}": Cilium
  tls:
    auto:
      enabled: true
      method: cronJob ###FIXME### should be cert-manager eventually
      certValidityDuration: 3660
  relay:
    enabled: true
    resources: # this is guess work
      limits:
        cpu: 1500m
        memory: 2Gi
      requests:
        cpu: 50m
        memory: 64Mi
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: {{ kubernetes_label.worker }}
              operator: Exists
      podAffinity: # copied from helm chart
        requiredDuringSchedulingIgnoredDuringExecution:
        - topologyKey: kubernetes.io/hostname
          labelSelector:
            matchLabels:
              k8s-app: cilium
    prometheus:
      enabled: true
      serviceMonitor:
        enabled: true
        interval: "30s"
        labels:
          "{{ prometheus_servicemonitor_label_name }}": "{{ prometheus_servicemonitor_labels.system }}"
  ui:
    enabled: true
    backend:
      resources: # this is guess work
        limits:
          cpu: 1500m
          memory: 2Gi
        requests:
          cpu: 10m
          memory: 64Mi
    frontend:
      resources: # this is guess work
        limits:
          cpu: 1500m
          memory: 2Gi
        requests:
          cpu: 10m
          memory: 64Mi
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: {{ kubernetes_label.worker }}
              operator: Exists

operator:
  enabled: true
  resources: # this is guess work
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 64Mi
  pprof:
    enabled: true
  prometheus:
    enabled: true
    serviceMonitor:
      enabled: true
      interval: "30s"
      labels:
        "{{ prometheus_servicemonitor_label_name }}": "{{ prometheus_servicemonitor_labels.system }}"
  dashboards:
    enabled: true
    label: "{{ grafana_dashboard_label_name }}"
    labelValue: "{{ grafana_dashboard_label_value }}"
    annotations:
      "{{ grafana_dashboard_folder_annotation }}": Cilium

nodeinit:
  enabled: true
  priorityClassName: system-node-critical
