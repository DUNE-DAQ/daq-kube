###############
# These cluster wide resources were present in the example
# read-only role provided by the kubernetes-dashboard project
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-cluster-view: "true"
  name: kubernetes-dashboard-read-only-cluster-resources
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
      - volumeattachments
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterrolebindings
      - clusterroles
      - roles
      - rolebindings
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubernetes-dashboard-read-only-role
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-view: "true"
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-cluster-view: "true"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubernetes-dashboard-read-only-role
  namespace: kubernetes-dashboard
automountServiceAccountToken: false
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-dashboard-read-only-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubernetes-dashboard-read-only-role
subjects:
- kind: ServiceAccount
  name: kubernetes-dashboard-read-only-role
  namespace: kubernetes-dashboard
---
apiVersion: v1
kind: Secret
metadata:
  name: kubernetes-dashboard-read-only-token
  namespace: kubernetes-dashboard
  annotations:
    kubernetes.io/service-account.name: kubernetes-dashboard-read-only-role
type: kubernetes.io/service-account-token
