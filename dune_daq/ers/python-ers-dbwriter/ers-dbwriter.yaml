---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/app: ers-dbwriter
    app.kubernetes.io/component: ers-dbwriter
  name: ers-dbwriter
  namespace: "{{ DUNE_ers.namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/app: ers-dbwriter
      app.kubernetes.io/component: ers-dbwriter
  template:
    metadata:
      labels:
        app.kubernetes.io/app: ers-dbwriter
        app.kubernetes.io/component: ers-dbwriter
    spec:
      initContainers:
        - image: docker.io/library/busybox:latest
          name: wait-for-kafka-startup
          command: ['sh','-c', 'until getent hosts {{ dunedaq.kafka.name }}-kafka-bootstrap.{{ dunedaq.kafka.namespace }}.svc; do echo waiting for kafka - {{ dunedaq.kafka.name }}-kafka-bootstrap.{{ dunedaq.kafka.namespace }}.svc; sleep 1; done']
      containers:
        - image: ghcr.io/dune-daq/pocket-ersdbwriter:latest
          name: ers-dbwriter
          env:
            - name: ERS_DBWRITER_KAFKA_HOST
              value: "{{ dunedaq.kafka.name }}-kafka-bootstrap.{{ dunedaq.kafka.namespace }}.svc"
            - name: ERS_DBWRITER_KAFKA_PORT
              value: "9092"
            - name: ERS_DBWRITER_HOST
              valueFrom:
                secretKeyRef:
                  key: host
                  name: ers-postgresql-svcbind-custom-user
            - name: ERS_DBWRITER_PORT
              valueFrom:
                secretKeyRef:
                  key: port
                  name: ers-postgresql-svcbind-custom-user
            - name: ERS_DBWRITER_USER
              valueFrom:
                secretKeyRef:
                  key: username
                  name: ers-postgresql-svcbind-custom-user
            - name: ERS_DBWRITER_PASS
              valueFrom:
                secretKeyRef:
                  key: password
                  name: ers-postgresql-svcbind-custom-user
            - name: ERS_DBWRITER_NAME
              valueFrom:
                secretKeyRef:
                  key: database
                  name: ers-postgresql-svcbind-custom-user
          resources:
            limits:
              memory: 512Mi
            requests:
              memory: 8Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          securityContext:
            runAsUser: 10000
            runAsGroup: 10000
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              drop:
              - ALL
      securityContext:
        fsGroup: 10000
